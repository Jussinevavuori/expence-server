{"version":3,"sources":["images/pexels-johannes-plenio-1103970.jpg","models/authentication/auth.class.ts","config.ts","utils/Error.ts","services/ServiceBase.ts","models/authentication/auth.json.ts","services/AuthService.ts","models/authentication/auth.model.ts","utils/MoneyAmount.ts","models/transactions/transactions.class.ts","models/transactions/transactions.json.ts","services/TransactionService.ts","utils/groupByDate.ts","utils/compareDate.ts","models/transactions/transactions.filtered.model.ts","models/transactions/transactions.model.ts","models/transactionForm/transactionForm.model.ts","store.ts","models/interval/interval.model.ts","views/Login/LoginView.tsx","hooks/useRedirect.ts","views/Login/LoginController.tsx","views/Register/RegisterView.tsx","views/Register/RegisterController.tsx","hooks/useMedia.ts","components/AppTabs/AppTabs.tsx","components/TransactionFormModal/TransactionFormModalView.tsx","components/TransactionFormModal/TransactionFormModalController.tsx","hooks/useOnKeyPress.ts","components/AppLayout/AppLayout.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/TransactionListing/TransactionListingView.tsx","components/TransactionListing/TransactionListing.tsx","components/TransactionList/TransactionListView.tsx","components/TransactionList/TransactionList.tsx","components/TransactionListFilters/TransactionListFiltersView.tsx","components/TransactionListFilters/TransactionListFiltersController.tsx","views/DashboardTab/DashboardTabView.tsx","views/DashboardTab/DashboardTabController.tsx","views/SettingsTab/SettingsTabView.tsx","views/SettingsTab/SettingsTabController.tsx","views/AnalyticsTab/AnalyticsTabView.tsx","views/AnalyticsTab/AnalyticsTabController.tsx","Routes.tsx","App.tsx","serviceWorker.ts","styles/theme.ts","index.tsx"],"names":["module","exports","Auth","json","id","displayName","email","photoUrl","googleId","this","undefined","Config","ApplicationError","code","message","isApplicationError","name","Error","ServerError","status","isServerError","ServiceBase","baseURL","axios","API_URL","Axios","create","withCredentials","path","token","store","getState","auth","accessToken","payload","jwt","decode","expiresAt","Number","exp","Date","now","error","console","warn","force","isAccessTokenValid","url","endpoint","get","result","data","getActions","_setAccessToken","logout","attemptRefreshAccessToken","override","headers","Authorization","requestFunction","onBeforeRequest","isAxiosError","response","request","config","handleRequest","options","getConfig","post","delete","put","patch","jsonAuthSchema","object","string","required","min","isJsonAuth","arg","isValidSync","authService","values","window","location","href","authModel","initialized","_setInitialized","action","state","boolean","user","isLoggedIn","computed","Boolean","newAccessToken","getProfile","thunk","actions","a","profile","_login","loginWithGoogle","loginWithEmailPassword","form","loginWithEmailAndPassword","registerWithEmailPassword","registerWithEmailAndPassword","forgotPassword","MoneyAmount","integer","Math","floor","that","abs","decimal","ceil","euros","toFixed","split","reverse","map","char","i","join","cents","padStart","formatSign","formatEuros","formatCents","sign","reduce","sum","value","add","Transaction","date","category","comment","amount","uid","time","integerAmount","uuid","getTime","jsonTransactionSchema","number","positive","isJsonTransaction","validateSync","TransactionService","Array","isArray","every","groupByDate","items","getDate","itemsByKey","res","item","key","datefns","getKey","Object","entries","entry","sort","b","compareDate","op","_a","serializeDate","_b","getFullYear","getMonth","filteredTransactionsModel","_","storeState","transactions","interval","startDate","endDate","filter","itemsByDates","filtered","count","length","sums","incomes","expenses","all","transactionService","transactionsModel","categories","c","indexOf","getTransactions","_getTransactions","jsons","postTransaction","transaction","_postTransaction","push","deleteTransaction","deleted","_deleteTransaction","putTransaction","_putTransaction","patchTransaction","_patchTransaction","onAuthChanged","thunkOn","target","resolvedTargets","loggedOut","loggedIn","type","_clearTransactions","transactionFormModel","isOpen","setOpen","open","close","storeModel","setStartDate","setEndDate","setInterval","dates","setPreviousMonthAsDateInterval","startOfActiveMonth","dateInPreviousMonth","setNextMonthAsDateInterval","endOfActiveMonth","dateInNextMonth","dateIntervalIsMonth","dateIntervalMonthString","month","toLocaleDateString","year","transactionForm","createStore","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","LoginView","useStore","props","useForm","resolver","yupResolver","loginValidationSchema","register","handleSubmit","errors","formState","emailError","touched","passwordError","password","className","onSubmit","ref","style","color","e","preventDefault","handleGoogleSubmit","onClick","log","useRedirect","history","useHistory","routes","yup","defined","max","LoginController","redirect","dashboard","RegisterView","registerValidationSchema","repeatPasswordError","repeatPassword","oneOf","RegisterController","useMedia","query","mediaQueryList","useMemo","matchMedia","useState","setValue","changeHandler","useCallback","matches","useEffect","addEventListener","removeEventListener","AppTabs","openTransactionsForm","sidebarView","dashboardMatch","useRouteMatch","analyticsMatch","analytics","budgetMatch","budget","settingsMatch","settings","cx","active","version","x","y","width","height","viewBox","d","svgPath","TransactionFormModalView","transactionFormSchema","integerAmountError","categoryError","commentError","Modal","onClose","handleClose","TransactionFormModal","openForm","closeForm","callback","eventHandler","ev","matchTarget","keyCode","shift","shiftKey","alt","altKey","ctrl","ctrlKey","ifPassed","if","ifNotPassed","ifNot","onKeyUp","useOnKeyPress","AppLayout","children","ProtectedRoute","fallbackRoute","routeProps","defaultFallbackRoute","login","to","TransactionListingView","signClass","isPositive","formatFull","TransactionListing","handleDelete","TransactionListView","del","datestring","currentYear","format","catch","TransactionList","filteredItemsByDates","bypassFilters","TransactionListFiltersView","ButtonGroup","size","Button","variant","onPreviousMonth","ChevronLeft","onNextMonth","ChevronRight","TransactionListFilters","styles","DashboardTabView","src","textureImg","totalHeader","filteredSum","larger","filteredIncomesSum","filteredExpensesSum","DashboardTab","filteredSums","SettingsTabView","handleLogout","SettingsTab","AnalyticsTabView","setData","accept","onChange","files","file","reader","FileReader","rows","toString","row","replace","readAsText","t","toDateString","AnalyticsTab","approot","Routes","exact","App","hostname","match","cssvar","getComputedStyle","document","documentElement","getPropertyValue","theme","createMuiTheme","palette","primary","main","dark","light","50","100","200","300","400","500","600","700","800","900","ReactDOM","render","ThemeProvider","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.871a85f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pexels-johannes-plenio-1103970.afe78909.jpg\";","import { JsonAuth } from \"./auth.json\";\r\n\r\nexport class Auth {\r\n  id: string;\r\n  displayName?: string;\r\n  email?: string;\r\n  photoUrl?: string;\r\n  googleId?: string;\r\n\r\n  constructor(json: JsonAuth) {\r\n    this.id = json.id;\r\n    this.displayName = json.displayName ?? undefined;\r\n    this.email = json.email ?? undefined;\r\n    this.photoUrl = json.photoUrl ?? undefined;\r\n    this.googleId = json.googleId ?? undefined;\r\n  }\r\n}\r\n","export class Config {\r\n  static get API_URL() {\r\n    switch (process.env.NODE_ENV) {\r\n      case \"production\":\r\n        return \"https://expenceapp.herokuapp.com\";\r\n      default:\r\n        return \"http://localhost:4000\";\r\n    }\r\n  }\r\n}\r\n","export class ApplicationError extends Error {\r\n  code: string;\r\n  isApplicationError: true;\r\n\r\n  constructor(code: string, message: string) {\r\n    super(message);\r\n\r\n    this.name = code;\r\n    this.code = code;\r\n    this.isApplicationError = true;\r\n  }\r\n}\r\n\r\nexport class ServerError extends ApplicationError {\r\n  status: number;\r\n  isServerError: true;\r\n\r\n  constructor(code: string, message: string, status: number) {\r\n    super(code, message);\r\n    this.status = status;\r\n    this.isServerError = true;\r\n  }\r\n}\r\n","import Axios, { AxiosInstance, AxiosRequestConfig, AxiosError } from \"axios\";\r\nimport { Config } from \"../config\";\r\nimport { store } from \"../store\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { ServerError, ApplicationError } from \"../utils/Error\";\r\n\r\nexport abstract class ServiceBase {\r\n  protected baseURL: string;\r\n  protected axios: AxiosInstance;\r\n\r\n  /**\r\n   * Set up base URL and axios instance for service\r\n   */\r\n  constructor() {\r\n    this.baseURL = `${Config.API_URL}/api`;\r\n    this.axios = Axios.create({ baseURL: this.baseURL, withCredentials: true });\r\n  }\r\n\r\n  /**\r\n   * Construct endpoint from path, base URL already handled\r\n   */\r\n  protected endpoint(path: string) {\r\n    return `${this.baseURL}${path}`;\r\n  }\r\n\r\n  /**\r\n   * Ensure access token is valid\r\n   */\r\n  protected isAccessTokenValid() {\r\n    const token = store.getState().auth.accessToken;\r\n    if (!token) return false;\r\n    try {\r\n      const payload = jwt.decode(token) as any;\r\n      const expiresAt = Number(payload?.exp || 0) * 1000;\r\n      const expirationBuffer = 5000; // Fetch new access token 30 seconds before expiration\r\n      const tokenIsValid = Date.now() < expiresAt - expirationBuffer;\r\n      return tokenIsValid;\r\n    } catch (error) {\r\n      console.warn(\"Error occured while checking access token\", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt refresh access token function\r\n   */\r\n  protected async attemptRefreshAccessToken(force: boolean = false) {\r\n    const accessTokenIsValid = this.isAccessTokenValid();\r\n    if (!accessTokenIsValid || force) {\r\n      const url = this.endpoint(\"/auth/refresh_token\");\r\n      try {\r\n        const result = await this.axios.get<string>(url);\r\n        const accessToken = result.data;\r\n        store.getActions().auth._setAccessToken(accessToken);\r\n      } catch (e) {\r\n        if (store.getState().auth.accessToken) {\r\n          store.getActions().auth.logout();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Before request hook\r\n   */\r\n  protected async onBeforeRequest() {\r\n    await this.attemptRefreshAccessToken();\r\n  }\r\n\r\n  /**\r\n   * Gets basic axios config\r\n   */\r\n  protected getConfig(\r\n    override?: AxiosRequestConfig | undefined\r\n  ): AxiosRequestConfig {\r\n    const accessToken = store.getState().auth.accessToken;\r\n\r\n    // Construct request headers\r\n    const headers = { ...override?.headers };\r\n    if (accessToken) {\r\n      headers.Authorization = `bearer ${accessToken}`;\r\n    }\r\n\r\n    // Override config with headers\r\n    return {\r\n      ...override,\r\n      headers,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Run requests with hooks and error handling\r\n   *\r\n   * @param requestFunction Request creator function\r\n   */\r\n  protected async handleRequest<T>(requestFunction: () => Promise<T>) {\r\n    try {\r\n      /**\r\n       * Run hooks\r\n       */\r\n      await this.onBeforeRequest();\r\n\r\n      /**\r\n       * Run request\r\n       */\r\n      return requestFunction();\r\n    } catch (error) {\r\n      /**\r\n       * Handle Axios errors\r\n       */\r\n      if (error.isAxiosError) {\r\n        const { response, request, code, message } = error as AxiosError;\r\n\r\n        /**\r\n         * If response contains errors, throw new ServerError from\r\n         * response data.\r\n         */\r\n        if (response) {\r\n          const code =\r\n            typeof response.data?.code === \"string\"\r\n              ? response.data?.code\r\n              : \"server/unknown\";\r\n\r\n          const message =\r\n            typeof response.data?.message === \"string\"\r\n              ? response.data?.message\r\n              : \"Unknown server error\";\r\n\r\n          throw new ServerError(code, message, response.status);\r\n        }\r\n\r\n        /**\r\n         * If response was not received, create ApplicationError for request\r\n         */\r\n        if (request) {\r\n          throw new ApplicationError(\r\n            code || \"axios/request\",\r\n            message || \"Error sending Axios request\"\r\n          );\r\n        }\r\n\r\n        /**\r\n         * If no request was sent, an error must've occured during configuration\r\n         */\r\n        throw new ApplicationError(\r\n          code || \"axios/config\",\r\n          \"Error during Axios config phase: \" + message\r\n        );\r\n      }\r\n\r\n      /**\r\n       * If error is not Axios error, error is unknonwn\r\n       */\r\n      throw new ApplicationError(\r\n        \"axios/unknown\",\r\n        `Unknown error during Axios request (${error.message})`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Axios typed GET request wrapper with hooks\r\n   */\r\n  protected async get<ResponseData = any>(\r\n    path: string,\r\n    config?: AxiosRequestConfig | undefined\r\n  ) {\r\n    return this.handleRequest(() => {\r\n      const url = this.endpoint(path);\r\n      const options = this.getConfig(config);\r\n      return this.axios.get<ResponseData>(url, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed POST request wrapper with hooks\r\n   */\r\n  protected async post<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return this.handleRequest(() => {\r\n      const url = this.endpoint(path);\r\n      const options = this.getConfig(config);\r\n      return this.axios.post<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed DELETE request wrapper with hooks\r\n   */\r\n  protected async delete<ResponseData = any>(\r\n    path: string,\r\n    config?: AxiosRequestConfig | undefined\r\n  ) {\r\n    return this.handleRequest(() => {\r\n      const url = this.endpoint(path);\r\n      const options = this.getConfig(config);\r\n      return this.axios.delete<ResponseData>(url, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed PUT request wrapper with hooks\r\n   */\r\n  protected async put<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return this.handleRequest(() => {\r\n      const url = this.endpoint(path);\r\n      const options = this.getConfig(config);\r\n      return this.axios.put<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed PATCH request wrapper with hooks\r\n   */\r\n  protected async patch<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return this.handleRequest(() => {\r\n      const url = this.endpoint(path);\r\n      const options = this.getConfig(config);\r\n      return this.axios.patch<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n}\r\n","import { object, string, ObjectSchema } from \"yup\";\r\n\r\nexport type JsonAuth = {\r\n  id: string;\r\n  displayName: string | undefined;\r\n  photoUrl: string | undefined;\r\n  email: string | undefined;\r\n  googleId: string | undefined;\r\n};\r\n\r\nexport const jsonAuthSchema: ObjectSchema<JsonAuth> = object({\r\n  id: string().required().min(1),\r\n  displayName: string(),\r\n  photoUrl: string(),\r\n  email: string(),\r\n  googleId: string(),\r\n}).required();\r\n\r\nexport function isJsonAuth(arg: any): arg is JsonAuth {\r\n  try {\r\n    jsonAuthSchema.isValidSync(arg);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n","import { ServiceBase } from \"./ServiceBase\";\r\nimport { isJsonAuth } from \"../models/authentication/auth.json\";\r\nimport { ApplicationError } from \"../utils/Error\";\r\n\r\nexport class AuthService extends ServiceBase {\r\n  async getProfile() {\r\n    const response = await this.get(\"/auth/profile\");\r\n    const data = response.data;\r\n    if (isJsonAuth(data)) {\r\n      return data;\r\n    } else {\r\n      throw new ApplicationError(\r\n        \"auth/profile/invalid-response\",\r\n        \"Invalid profile response received from server\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async registerWithEmailAndPassword(values: {\r\n    email: string;\r\n    password: string;\r\n  }) {\r\n    const response = await this.post(\"/auth/register\", values);\r\n    if (response.status !== 200) {\r\n      throw new ApplicationError(\r\n        \"auth/register/invalid-response\",\r\n        \"Invalid response received from server during registration\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async loginWithEmailAndPassword(values: { email: string; password: string }) {\r\n    const response = await this.post(\"/auth/login\", values);\r\n    if (response.status !== 200) {\r\n      throw new ApplicationError(\r\n        \"auth/login/invalid-response\",\r\n        \"Invalid response received from server during login\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async forgotPassword(values: { email: string }) {\r\n    const response = await this.post(\"/auth/forgot_password\", values);\r\n    if (response.status !== 200) {\r\n      throw new ApplicationError(\r\n        \"auth/forgotpassword/invalid-response\",\r\n        \"Invalid response received from server during forgot password\"\r\n      );\r\n    }\r\n  }\r\n\r\n  loginWithGoogle() {\r\n    window.location.href = this.endpoint(\"/auth/google\");\r\n  }\r\n\r\n  logout() {\r\n    window.location.href = this.endpoint(\"/auth/logout\");\r\n  }\r\n}\r\n","import { Action, action, Computed, computed, Thunk, thunk } from \"easy-peasy\";\r\nimport { Auth } from \"./auth.class\";\r\nimport { AuthService } from \"../../services/AuthService\";\r\nimport { JsonAuth, isJsonAuth } from \"./auth.json\";\r\n\r\n/**\r\n * An instance of the auth service for the authentication model to use\r\n */\r\nexport const authService = new AuthService();\r\n\r\nexport interface AuthModel {\r\n  /**\r\n   * Initialized state: has the profile been fetched at the least once\r\n   */\r\n  initialized: boolean;\r\n  _setInitialized: Action<AuthModel, boolean>;\r\n\r\n  /**\r\n   * Currently logged in user or null if none logged in\r\n   */\r\n  user: Auth | null;\r\n\r\n  /**\r\n   * Computed property for whether the user is currently logged in\r\n   */\r\n  isLoggedIn: Computed<AuthModel, boolean>;\r\n\r\n  /**\r\n   * Current access token for authentication in memory for security purposes.\r\n   * This is automatically refreshed when making a request with a service and\r\n   * should not be manually set.\r\n   */\r\n  accessToken: string | null;\r\n\r\n  /**\r\n   * Function to set the access token\r\n   */\r\n  _setAccessToken: Action<AuthModel, string>;\r\n\r\n  /**\r\n   * Function to get the currently logged in user's profile data and apply it\r\n   * to the user property. The logged in property is defined by the current\r\n   * refresh token.\r\n   */\r\n  getProfile: Thunk<AuthModel, void, any, any, Promise<void>>;\r\n\r\n  /**\r\n   * Log in the current user with a Google account\r\n   */\r\n  loginWithGoogle: Thunk<AuthModel, void>;\r\n\r\n  /**\r\n   * Register the current user with email and password\r\n   */\r\n  registerWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    { email: string; password: string },\r\n    any,\r\n    any,\r\n    Promise<void>\r\n  >;\r\n\r\n  /**\r\n   * Log in the current user with email and password\r\n   */\r\n  loginWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    { email: string; password: string },\r\n    any,\r\n    any,\r\n    Promise<void>\r\n  >;\r\n\r\n  /**\r\n   * Forgot password\r\n   */\r\n  forgotPassword: Thunk<AuthModel, { email: string }, any, any, Promise<void>>;\r\n\r\n  /**\r\n   * Action to set the current user with partial user data (a constructable)\r\n   */\r\n  _login: Action<AuthModel, JsonAuth>;\r\n\r\n  /**\r\n   * Log out the current user\r\n   */\r\n  logout: Thunk<AuthModel, void>;\r\n}\r\n\r\n/**\r\n * Implementation of the authentication model\r\n */\r\nexport const authModel: AuthModel = {\r\n  initialized: false,\r\n  _setInitialized: action((state, boolean) => {\r\n    state.initialized = boolean;\r\n  }),\r\n\r\n  user: null,\r\n\r\n  isLoggedIn: computed((state) => Boolean(state.user)),\r\n\r\n  accessToken: null,\r\n\r\n  _setAccessToken: action((state, newAccessToken) => {\r\n    state.accessToken = newAccessToken;\r\n  }),\r\n\r\n  getProfile: thunk(async (actions) => {\r\n    try {\r\n      const profile = await authService.getProfile();\r\n      actions._login(profile);\r\n    } catch (error) {\r\n    } finally {\r\n      actions._setInitialized(true);\r\n    }\r\n  }),\r\n\r\n  loginWithGoogle: thunk(() => {\r\n    authService.loginWithGoogle();\r\n  }),\r\n\r\n  loginWithEmailPassword: thunk(async (actions, form) => {\r\n    await authService.loginWithEmailAndPassword(form);\r\n    const profile = await authService.getProfile();\r\n    actions._login(profile);\r\n  }),\r\n\r\n  registerWithEmailPassword: thunk(async (actions, form) => {\r\n    await authService.registerWithEmailAndPassword(form);\r\n    const profile = await authService.getProfile();\r\n    actions._login(profile);\r\n  }),\r\n\r\n  forgotPassword: thunk(async (actions, form) => {\r\n    await authService.forgotPassword(form);\r\n  }),\r\n\r\n  _login: action((state, json) => {\r\n    if (isJsonAuth(json)) {\r\n      state.user = new Auth(json);\r\n    }\r\n  }),\r\n\r\n  logout: thunk(() => {\r\n    authService.logout();\r\n  }),\r\n};\r\n","export class MoneyAmount {\r\n  integer: number;\r\n\r\n  constructor(integer: number) {\r\n    if (Math.floor(integer) !== integer) {\r\n      throw new Error(\"Cannot construct money amount from non-integer value\");\r\n    }\r\n    this.integer = integer;\r\n  }\r\n\r\n  get decimal() {\r\n    return this.integer / 100;\r\n  }\r\n\r\n  get unsignedDecimal() {\r\n    return Math.abs(this.decimal);\r\n  }\r\n\r\n  get unsignedInteger() {\r\n    return Math.abs(this.integer);\r\n  }\r\n\r\n  get euros() {\r\n    if (this.integer > 0) {\r\n      return Math.floor(this.integer / 100);\r\n    } else {\r\n      return Math.ceil(this.integer / 100);\r\n    }\r\n  }\r\n\r\n  get formatEuros() {\r\n    // Gets the euros (ignorign the sign) and maps them to a string,\r\n    // where every 3 characters there is a space\r\n    return Math.abs(this.euros)\r\n      .toFixed(0)\r\n      .split(\"\")\r\n      .reverse()\r\n      .map((char, i) => (i % 3 === 2 ? \" \" + char : char))\r\n      .reverse()\r\n      .join(\"\");\r\n  }\r\n\r\n  get cents() {\r\n    return Math.floor(this.integer % 100);\r\n  }\r\n\r\n  get formatCents() {\r\n    return Math.abs(this.cents).toFixed(0).padStart(2, \"0\");\r\n  }\r\n\r\n  get sign(): -1 | 0 | 1 {\r\n    return this.integer === 0 ? 0 : this.integer > 0 ? 1 : -1;\r\n  }\r\n\r\n  get formatSign() {\r\n    return this.integer === 0 ? \"±\" : this.integer > 0 ? \"+\" : \"-\";\r\n  }\r\n\r\n  get formatFull() {\r\n    return `${this.formatSign} ${this.formatEuros}.${this.formatCents} €`;\r\n  }\r\n\r\n  get isPositive() {\r\n    return this.sign >= 0;\r\n  }\r\n\r\n  get isNegative() {\r\n    return this.sign < 0;\r\n  }\r\n\r\n  add(that: MoneyAmount) {\r\n    return new MoneyAmount(this.integer + that.integer);\r\n  }\r\n\r\n  subtract(that: MoneyAmount) {\r\n    return new MoneyAmount(this.integer - that.integer);\r\n  }\r\n\r\n  static sum(values: MoneyAmount[]) {\r\n    return values.reduce((sum, value) => sum.add(value), new MoneyAmount(0));\r\n  }\r\n}\r\n","import { JsonTransaction } from \"./transactions.json\";\r\nimport * as uuid from \"uuid\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\n\r\nexport class Transaction {\r\n  date: Date;\r\n  category: string;\r\n  comment: string;\r\n  amount: MoneyAmount;\r\n  id: string;\r\n  uid: string;\r\n\r\n  constructor(json: JsonTransaction) {\r\n    this.date = new Date(json.time);\r\n    this.comment = json.comment || \"\";\r\n    this.category = json.category;\r\n    this.amount = new MoneyAmount(Math.floor(json.integerAmount));\r\n    this.id = json.id || uuid.v4();\r\n    this.uid = json.uid;\r\n  }\r\n\r\n  toJson(): JsonTransaction {\r\n    return {\r\n      time: this.date.getTime(),\r\n      category: this.category,\r\n      comment: this.comment,\r\n      integerAmount: this.amount.integer,\r\n      id: this.id,\r\n      uid: this.uid,\r\n    };\r\n  }\r\n}\r\n","import { object, string, number, ObjectSchema } from \"yup\";\r\n\r\nconst id = () => string();\r\nconst uid = () => string();\r\nconst integerAmount = () => number().integer();\r\nconst time = () => number().positive().integer();\r\nconst category = () => string().min(1);\r\nconst comment = () => string();\r\n\r\nexport type JsonTransaction = {\r\n  id: string;\r\n  uid: string;\r\n  time: number;\r\n  category: string;\r\n  integerAmount: number;\r\n  comment?: string | undefined;\r\n};\r\n\r\nexport const jsonTransactionSchema: ObjectSchema<JsonTransaction> = object({\r\n  id: id().required(),\r\n  uid: uid().required(),\r\n  time: time().required(),\r\n  category: category().required(),\r\n  integerAmount: integerAmount().required(),\r\n  comment: comment(),\r\n}).required();\r\n\r\nexport function isJsonTransaction(arg: any): arg is JsonTransaction {\r\n  try {\r\n    jsonTransactionSchema.validateSync(arg);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function isJsonTransactionArray(arg: any): arg is JsonTransaction[] {\r\n  return Array.isArray(arg) && arg.every(isJsonTransaction);\r\n}\r\n","import { ServiceBase } from \"./ServiceBase\";\r\nimport {\r\n  JsonTransaction,\r\n  isJsonTransactionArray,\r\n  isJsonTransaction,\r\n} from \"../models/transactions/transactions.json\";\r\nimport { ApplicationError } from \"../utils/Error\";\r\n\r\nexport class TransactionService extends ServiceBase {\r\n  async getTransactions() {\r\n    const response = await this.get(\"/transactions\");\r\n    const data = response.data;\r\n    if (isJsonTransactionArray(data)) {\r\n      return data;\r\n    } else {\r\n      throw new ApplicationError(\r\n        \"transactions/get/invalid-response\",\r\n        \"Could not get transactions, received invalid response.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async postTransaction(json: Omit<JsonTransaction, \"id\" | \"uid\">) {\r\n    const response = await this.post(\"/transactions\", json);\r\n    const data = response.data;\r\n    if (isJsonTransaction(data)) {\r\n      return data;\r\n    } else {\r\n      throw new ApplicationError(\r\n        \"transactions/post/invalid-response\",\r\n        \"Could not post transaction, received invalid response.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async deleteTransaction(id: string) {\r\n    const response = await this.delete(`/transactions/${id}`);\r\n    return response.status === 204;\r\n  }\r\n\r\n  async putTransaction(json: JsonTransaction) {\r\n    const response = await this.put(`/transactions/${json.id}`, json);\r\n    const data = response.data;\r\n    if (isJsonTransaction(data)) {\r\n      return data;\r\n    } else {\r\n      throw new ApplicationError(\r\n        \"transactions/put/invalid-response\",\r\n        \"Could not put transaction, received invalid response.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  async patchTransaction(json: JsonTransaction) {\r\n    const response = await this.patch(`/transactions/${json.id}`, json);\r\n    const data = response.data;\r\n    if (isJsonTransaction(data)) {\r\n      return data;\r\n    } else {\r\n      throw new ApplicationError(\r\n        \"transactions/patch/invalid-response\",\r\n        \"Could not patch transaction, received invalid response.\"\r\n      );\r\n    }\r\n  }\r\n}\r\n","import * as datefns from \"date-fns\";\r\n\r\nexport function groupByDate<T>(\r\n  items: T[],\r\n  getDate: (t: T) => Date,\r\n  options?: { sort?: boolean }\r\n): { date: Date; items: T[] }[] {\r\n  // Function to extract a key from an item which has a date\r\n  function getKey(item: T): string {\r\n    const date = getDate(item);\r\n    return datefns.lightFormat(date, \"yyyy-MM-dd\");\r\n  }\r\n\r\n  // Get all items by their keys\r\n  const itemsByKey = items.reduce((res, item) => {\r\n    const key = getKey(item);\r\n    return {\r\n      ...res,\r\n      [key]: [...(res[key] ?? []), item],\r\n    };\r\n  }, {} as Record<string, T[]>);\r\n\r\n  // Map to array, where each key is mapped to a date\r\n  const result = Object.entries(itemsByKey).map((entry) => {\r\n    return {\r\n      date: datefns.startOfDay(new Date(entry[0])),\r\n      items: entry[1],\r\n    };\r\n  });\r\n\r\n  // Return result, optionally sorted\r\n  if (options?.sort) {\r\n    return result.sort((a, b) => {\r\n      return b.date.getTime() - a.date.getTime();\r\n    });\r\n  } else {\r\n    return result;\r\n  }\r\n}\r\n","export type DateCompareOperator = \">\" | \">=\" | \"==\" | \"<=\" | \"<\";\r\n\r\n/**\r\n * Utility function to compare two dates, where only the date is taken into\r\n * account, not the time.\r\n *\r\n * @param a  Left hand operator date\r\n * @param op Operator to specify which comparison to run\r\n * @param b  Right hand operator date\r\n */\r\nexport function compareDate(a: Date, op: DateCompareOperator, b: Date) {\r\n  // Serialize dates for easy comparison\r\n  const _a = serializeDate(a);\r\n  const _b = serializeDate(b);\r\n\r\n  switch (op) {\r\n    case \"<\":\r\n      return _a < _b;\r\n    case \"<=\":\r\n      return _a <= _b;\r\n    case \"==\":\r\n      return _a === _b;\r\n    case \">=\":\r\n      return _a >= _b;\r\n    case \">\":\r\n      return _a > _b;\r\n  }\r\n}\r\n\r\n/**\r\n * Helper function for above function to serialize dates, taking only into account\r\n * the date, month and year, not the time.\r\n *\r\n * @param date Date to serialize\r\n */\r\nfunction serializeDate(date: Date) {\r\n  return date.getFullYear() * 341 + date.getMonth() * 31 + date.getDate();\r\n}\r\n","import { computed, Computed } from \"easy-peasy\";\r\nimport { Transaction } from \"./transactions.class\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\nimport { groupByDate } from \"../../utils/groupByDate\";\r\nimport { StoreModel } from \"../../store\";\r\nimport { compareDate } from \"../../utils/compareDate\";\r\n\r\nexport interface FilteredTransactionsModel {\r\n  /**\r\n   * All user's current transactions after filterign\r\n   */\r\n  items: Computed<FilteredTransactionsModel, Transaction[], StoreModel>;\r\n\r\n  /**\r\n   * Filtered transactions grouped and sorted by dates\r\n   */\r\n  itemsByDates: Computed<\r\n    FilteredTransactionsModel,\r\n    { date: Date; items: Transaction[] }[],\r\n    StoreModel\r\n  >;\r\n\r\n  /**\r\n   * Filtered amount of transactions\r\n   */\r\n  count: Computed<FilteredTransactionsModel, number, StoreModel>;\r\n\r\n  /**\r\n   * Sums of filtered transactions\r\n   */\r\n  sums: Computed<\r\n    FilteredTransactionsModel,\r\n    {\r\n      all: MoneyAmount;\r\n      expenses: MoneyAmount;\r\n      incomes: MoneyAmount;\r\n    },\r\n    StoreModel\r\n  >;\r\n}\r\n\r\nexport const filteredTransactionsModel: FilteredTransactionsModel = {\r\n  items: computed(\r\n    [\r\n      (_, storeState) => storeState.transactions.items,\r\n      (_, storeState) => storeState.interval.startDate,\r\n      (_, storeState) => storeState.interval.endDate,\r\n    ],\r\n    (items, startDate, endDate) => {\r\n      return items.filter((item) => {\r\n        if (compareDate(item.date, \"<\", startDate)) return false;\r\n        if (compareDate(item.date, \">\", endDate)) return false;\r\n        return true;\r\n      });\r\n    }\r\n  ),\r\n\r\n  itemsByDates: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      return groupByDate(items, (_) => _.date, { sort: true });\r\n    }\r\n  ),\r\n\r\n  count: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      return items.length;\r\n    }\r\n  ),\r\n\r\n  sums: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      const incomes = items\r\n        .filter((_) => _.amount.integer > 0)\r\n        .reduce((sum, item) => sum + item.amount.integer, 0);\r\n      const expenses = items\r\n        .filter((_) => _.amount.integer < 0)\r\n        .reduce((sum, item) => sum + item.amount.integer, 0);\r\n      return {\r\n        all: new MoneyAmount(incomes + expenses),\r\n        incomes: new MoneyAmount(incomes),\r\n        expenses: new MoneyAmount(expenses),\r\n      };\r\n    }\r\n  ),\r\n};\r\n","import {\r\n  Action,\r\n  action,\r\n  Computed,\r\n  computed,\r\n  Thunk,\r\n  thunk,\r\n  ThunkOn,\r\n  thunkOn,\r\n} from \"easy-peasy\";\r\nimport { Transaction } from \"./transactions.class\";\r\nimport { JsonTransaction } from \"./transactions.json\";\r\nimport { TransactionService } from \"../../services/TransactionService\";\r\nimport { StoreModel } from \"../../store\";\r\nimport { groupByDate } from \"../../utils/groupByDate\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\nimport {\r\n  filteredTransactionsModel,\r\n  FilteredTransactionsModel,\r\n} from \"./transactions.filtered.model\";\r\n\r\n/**\r\n * Instance of transactionService for thunks\r\n */\r\nconst transactionService = new TransactionService();\r\n\r\nexport interface TransactionsModel {\r\n  /**\r\n   * All user's current transactions\r\n   */\r\n  items: Transaction[];\r\n\r\n  /**\r\n   * Current transactions grouped and sorted by dates\r\n   */\r\n  itemsByDates: Computed<\r\n    TransactionsModel,\r\n    { date: Date; items: Transaction[] }[]\r\n  >;\r\n\r\n  /**\r\n   * Current amount of transactions\r\n   */\r\n  count: Computed<TransactionsModel, number>;\r\n\r\n  /**\r\n   * Sum of transactions\r\n   */\r\n  sums: Computed<\r\n    TransactionsModel,\r\n    {\r\n      all: MoneyAmount;\r\n      expenses: MoneyAmount;\r\n      incomes: MoneyAmount;\r\n    }\r\n  >;\r\n\r\n  /**\r\n   * Filtered properties (copies of the above properties using only\r\n   * filtered items)\r\n   */\r\n  filtered: FilteredTransactionsModel;\r\n\r\n  /**\r\n   * All different categories\r\n   */\r\n  categories: Computed<TransactionsModel, string[]>;\r\n\r\n  /**\r\n   * Fetch all transactions for user from server\r\n   */\r\n  getTransactions: Thunk<\r\n    TransactionsModel,\r\n    void,\r\n    any,\r\n    any,\r\n    Promise<JsonTransaction[]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by get transaction thunk to update get result to state\r\n   */\r\n  _getTransactions: Action<TransactionsModel, JsonTransaction[]>;\r\n\r\n  /**\r\n   * Post and update transaction to state\r\n   */\r\n  postTransaction: Thunk<\r\n    TransactionsModel,\r\n    Omit<JsonTransaction, \"id\" | \"uid\">,\r\n    any,\r\n    any,\r\n    Promise<JsonTransaction>\r\n  >;\r\n\r\n  /**\r\n   * Action called by post transaction thunk to update post result to state\r\n   */\r\n  _postTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Delete and remove transaction from state\r\n   */\r\n  deleteTransaction: Thunk<\r\n    TransactionsModel,\r\n    string,\r\n    any,\r\n    any,\r\n    Promise<Boolean>\r\n  >;\r\n\r\n  /**\r\n   * Action called by delete transaction thunk to update delete result to state\r\n   */\r\n  _deleteTransaction: Action<TransactionsModel, string>;\r\n\r\n  /**\r\n   * Put and update transaction to state\r\n   */\r\n  putTransaction: Thunk<\r\n    TransactionsModel,\r\n    JsonTransaction,\r\n    any,\r\n    any,\r\n    Promise<JsonTransaction>\r\n  >;\r\n\r\n  /**\r\n   * Action called by put transaction thunk to update put result to state\r\n   */\r\n  _putTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Patch and update transaction to state\r\n   */\r\n  patchTransaction: Thunk<\r\n    TransactionsModel,\r\n    JsonTransaction,\r\n    any,\r\n    any,\r\n    Promise<JsonTransaction>\r\n  >;\r\n\r\n  /**\r\n   * Action called by patch transaction thunk to update patch result to state\r\n   */\r\n  _patchTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Listening to auth changes\r\n   */\r\n  onAuthChanged: ThunkOn<TransactionsModel, any, StoreModel>;\r\n\r\n  _clearTransactions: Action<TransactionsModel, void>;\r\n}\r\n\r\nexport const transactionsModel: TransactionsModel = {\r\n  items: [],\r\n\r\n  itemsByDates: computed((state) => {\r\n    return groupByDate(state.items, (_) => _.date, { sort: true });\r\n  }),\r\n\r\n  count: computed((state) => state.items.length),\r\n\r\n  sums: computed((state) => {\r\n    const incomes = state.items\r\n      .filter((_) => _.amount.integer > 0)\r\n      .reduce((sum, item) => sum + item.amount.integer, 0);\r\n    const expenses = state.items\r\n      .filter((_) => _.amount.integer < 0)\r\n      .reduce((sum, item) => sum + item.amount.integer, 0);\r\n    return {\r\n      all: new MoneyAmount(incomes + expenses),\r\n      incomes: new MoneyAmount(incomes),\r\n      expenses: new MoneyAmount(expenses),\r\n    };\r\n  }),\r\n\r\n  filtered: filteredTransactionsModel,\r\n\r\n  categories: computed((state) =>\r\n    state.items.map((_) => _.category).filter((c, i, a) => a.indexOf(c) === i)\r\n  ),\r\n\r\n  getTransactions: thunk(async (actions) => {\r\n    const transactions = await transactionService.getTransactions();\r\n    actions._getTransactions(transactions);\r\n    return transactions;\r\n  }),\r\n\r\n  _getTransactions: action((state, jsons) => {\r\n    state.items = jsons.map((json) => new Transaction(json));\r\n  }),\r\n\r\n  postTransaction: thunk(async (actions, json) => {\r\n    const transaction = await transactionService.postTransaction(json);\r\n    actions._postTransaction(transaction);\r\n    return transaction;\r\n  }),\r\n\r\n  _postTransaction: action((state, json) => {\r\n    state.items.push(new Transaction(json));\r\n  }),\r\n\r\n  deleteTransaction: thunk(async (actions, id) => {\r\n    const deleted = await transactionService.deleteTransaction(id);\r\n    actions._deleteTransaction(id);\r\n    return deleted;\r\n  }),\r\n\r\n  _deleteTransaction: action((state, id) => {\r\n    state.items = state.items.filter((item) => item.id !== id);\r\n  }),\r\n\r\n  putTransaction: thunk(async (actions, json) => {\r\n    const transaction = await transactionService.putTransaction(json);\r\n    actions._putTransaction(transaction);\r\n    return transaction;\r\n  }),\r\n\r\n  _putTransaction: action((state, json) => {\r\n    state.items = state.items.map((item) =>\r\n      item.id === json.id ? new Transaction(json) : item\r\n    );\r\n  }),\r\n\r\n  patchTransaction: thunk(async (actions, json) => {\r\n    const transaction = await transactionService.patchTransaction(json);\r\n    actions._patchTransaction(transaction);\r\n    return transaction;\r\n  }),\r\n\r\n  _patchTransaction: action((state, json) => {\r\n    state.items = state.items.map((item) =>\r\n      item.id === json.id ? new Transaction(json) : item\r\n    );\r\n  }),\r\n\r\n  onAuthChanged: thunkOn(\r\n    (_, store) => [store.auth.logout, store.auth._login],\r\n    (actions, target) => {\r\n      const [loggedOut, loggedIn] = target.resolvedTargets;\r\n      switch (target.type) {\r\n        case loggedOut:\r\n          actions._clearTransactions();\r\n          break;\r\n        case loggedIn:\r\n          actions.getTransactions();\r\n          break;\r\n      }\r\n    }\r\n  ),\r\n\r\n  _clearTransactions: action((state) => {\r\n    state.items = [];\r\n  }),\r\n};\r\n","import { Action, action } from \"easy-peasy\";\r\n\r\nexport type TransactionFormModel = {\r\n  isOpen: boolean;\r\n\r\n  setOpen: Action<TransactionFormModel, boolean>;\r\n\r\n  open: Action<TransactionFormModel, void>;\r\n\r\n  close: Action<TransactionFormModel, void>;\r\n};\r\n\r\nexport const transactionFormModel: TransactionFormModel = {\r\n  isOpen: false,\r\n\r\n  setOpen: action((state, boolean) => {\r\n    state.isOpen = boolean;\r\n  }),\r\n\r\n  open: action((state) => {\r\n    state.isOpen = true;\r\n  }),\r\n\r\n  close: action((state) => {\r\n    state.isOpen = false;\r\n  }),\r\n};\r\n","import { createStore, createTypedHooks } from \"easy-peasy\";\r\nimport { AuthModel, authModel } from \"./models/authentication/auth.model\";\r\nimport {\r\n  TransactionsModel,\r\n  transactionsModel,\r\n} from \"./models/transactions/transactions.model\";\r\nimport {\r\n  TransactionFormModel,\r\n  transactionFormModel,\r\n} from \"./models/transactionForm/transactionForm.model\";\r\nimport { intervalModel, IntervalModel } from \"./models/interval/interval.model\";\r\n\r\nexport interface StoreModel {\r\n  transactions: TransactionsModel;\r\n  transactionForm: TransactionFormModel;\r\n  interval: IntervalModel;\r\n  auth: AuthModel;\r\n}\r\n\r\nconst storeModel: StoreModel = {\r\n  transactions: transactionsModel,\r\n  interval: intervalModel,\r\n  transactionForm: transactionFormModel,\r\n  auth: authModel,\r\n};\r\n\r\nexport const store = createStore(storeModel);\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).store = store;\r\n}\r\n\r\nexport const typedHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\nexport const useStore = typedHooks.useStore;\r\n","import { Action, action, Computed, computed } from \"easy-peasy\";\r\nimport * as datefns from \"date-fns\";\r\nimport { compareDate } from \"../../utils/compareDate\";\r\n\r\nexport type IntervalModel = {\r\n  /**\r\n   * Date filter start limit.\r\n   *\r\n   * All transactions with the same or later date will pass this filter.\r\n   * The time of day is not taken into account while comparing dates.\r\n   *\r\n   * Defaults to start date of current month.\r\n   */\r\n  startDate: Date;\r\n\r\n  /**\r\n   * Date filter end limit.\r\n   *\r\n   * All transactions with the same or earlier date will pass this filter.\r\n   * The time of day is not taken into account while comparing dates.\r\n   *\r\n   * Defaults to end date of current month.\r\n   */\r\n  endDate: Date;\r\n\r\n  /**\r\n   * Action to manually specify the start date filter\r\n   */\r\n  setStartDate: Action<IntervalModel, Date>;\r\n\r\n  /**\r\n   * Action to manually specify the end date filter\r\n   */\r\n  setEndDate: Action<IntervalModel, Date>;\r\n\r\n  /**\r\n   * Action to manually specify start and end dates for interval simultaneously\r\n   */\r\n  setInterval: Action<IntervalModel, { startDate: Date; endDate: Date }>;\r\n\r\n  /**\r\n   * Set previous month as interval. Uses the start date's month to figure\r\n   * out the previous month in case the start and end date are in different\r\n   * months.\r\n   */\r\n  setPreviousMonthAsDateInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Set next month as interval. Uses the end date's month to figure out\r\n   * the next month in case the start and end date are in different months.\r\n   */\r\n  setNextMonthAsDateInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Is the current date interval a single full month\r\n   */\r\n  dateIntervalIsMonth: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * The current date interval month string or undefined if date interval is not a\r\n   * single full month\r\n   */\r\n  dateIntervalMonthString: Computed<IntervalModel, string | undefined>;\r\n};\r\n\r\nexport const intervalModel: IntervalModel = {\r\n  startDate: datefns.startOfMonth(new Date()),\r\n\r\n  endDate: datefns.endOfMonth(new Date()),\r\n\r\n  setStartDate: action((state, date) => {\r\n    if (compareDate(date, \">\", state.endDate)) {\r\n      throw new Error(\"Start date cannot be after end date\");\r\n    } else {\r\n      state.startDate = date;\r\n    }\r\n  }),\r\n\r\n  setEndDate: action((state, date) => {\r\n    if (compareDate(date, \"<\", state.startDate)) {\r\n      throw new Error(\"End date cannot be before start date\");\r\n    } else {\r\n      state.endDate = date;\r\n    }\r\n  }),\r\n\r\n  setInterval: action((state, dates) => {\r\n    if (compareDate(dates.startDate, \">\", dates.endDate)) {\r\n      throw new Error(\"End date cannot be before start date\");\r\n    } else {\r\n      state.startDate = dates.startDate;\r\n      state.endDate = dates.endDate;\r\n    }\r\n  }),\r\n\r\n  setPreviousMonthAsDateInterval: action((state) => {\r\n    const startOfActiveMonth = datefns.startOfMonth(state.startDate);\r\n    const dateInPreviousMonth = datefns.subDays(startOfActiveMonth, 1);\r\n    state.startDate = datefns.startOfMonth(dateInPreviousMonth);\r\n    state.endDate = datefns.endOfMonth(dateInPreviousMonth);\r\n  }),\r\n\r\n  setNextMonthAsDateInterval: action((state) => {\r\n    const endOfActiveMonth = datefns.endOfMonth(state.endDate);\r\n    const dateInNextMonth = datefns.addDays(endOfActiveMonth, 1);\r\n    state.startDate = datefns.startOfMonth(dateInNextMonth);\r\n    state.endDate = datefns.endOfMonth(dateInNextMonth);\r\n  }),\r\n\r\n  dateIntervalIsMonth: computed((state) => {\r\n    return (\r\n      datefns.isSameMonth(state.startDate, state.endDate) &&\r\n      datefns.isFirstDayOfMonth(state.startDate) &&\r\n      datefns.isLastDayOfMonth(state.endDate)\r\n    );\r\n  }),\r\n\r\n  dateIntervalMonthString: computed((state) => {\r\n    if (state.dateIntervalIsMonth) {\r\n      const month = state.startDate.toLocaleDateString(\"en-EN\", {\r\n        month: \"long\",\r\n      });\r\n      const year = state.startDate.toLocaleDateString(\"en-EN\", {\r\n        year: \"numeric\",\r\n      });\r\n      return `${month}, ${year}`;\r\n    }\r\n  }),\r\n};\r\n","import React from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { loginValidationSchema, LoginFormType } from './LoginController';\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport { useStoreActions } from '../../store';\r\n\r\nexport type LoginViewProps = {\r\n\thandleSubmit(values: LoginFormType): Promise<void>;\r\n\thandleGoogleSubmit(): Promise<void>;\r\n}\r\n\r\nexport const LoginView: React.FC<LoginViewProps> = (props) => {\r\n\r\n\tconst { register, handleSubmit, errors, formState } = useForm<LoginFormType>({\r\n\t\tresolver: yupResolver(loginValidationSchema),\r\n\t})\r\n\r\n\tconst forgotPassword = useStoreActions(_ => _.auth.forgotPassword)\r\n\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\tconst passwordError = formState.touched.password && errors.password?.message\r\n\r\n\treturn <div className=\"LoginView\">\r\n\t\t<form onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t<input id=\"login-email\" name=\"email\" type=\"text\" ref={register} />\r\n\t\t\t<p style={{ color: \"#FF6622\" }}>{emailError}</p>\r\n\r\n\t\t\t<input id=\"login-password\" name=\"password\" type=\"password\" ref={register} />\r\n\t\t\t<p style={{ color: \"#FF6622\" }}>{passwordError}</p>\r\n\r\n\t\t\t<button type=\"submit\">{\"Log in\"}</button>\r\n\r\n\t\t</form >\r\n\r\n\t\t<p>{\"or\"}</p>\r\n\r\n\t\t<form onSubmit={e => { e.preventDefault(); props.handleGoogleSubmit() }}>\r\n\t\t\t<button type=\"submit\">{\"Log in with Google\"}</button>\r\n\t\t</form>\r\n\r\n\t\t<button onClick={async () => {\r\n\t\t\ttry {\r\n\t\t\t\tforgotPassword({ email: \"jussi@nevavuori.fi\" })\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(\"Failed with error:\", error)\r\n\t\t\t}\r\n\t\t}}>\r\n\t\t\tForgot password?\r\n\t\t</button>\r\n\t</div>\r\n}\r\n","import { routes } from \"../Routes\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type RouteSelector = (r: typeof routes) => string;\r\n\r\nexport function useRedirect() {\r\n  const history = useHistory();\r\n  return (path: string | RouteSelector) =>\r\n    history.push(typeof path === \"string\" ? path : path(routes));\r\n}\r\n","import React from 'react';\r\nimport { LoginView } from './LoginView';\r\nimport * as yup from \"yup\"\r\nimport { useStoreActions } from '../../store';\r\nimport { useRedirect } from '../../hooks/useRedirect';\r\n\r\nexport const loginValidationSchema = yup.object({\r\n\temail: yup.string().defined().min(3).max(255).email(),\r\n\tpassword: yup.string().defined().min(3).max(255),\r\n}).defined()\r\n\r\nexport type LoginFormType = yup.InferType<typeof loginValidationSchema>\r\n\r\nexport const LoginController: React.FC<{}> = () => {\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst loginWithGoogle = useStoreActions(_ => _.auth.loginWithGoogle)\r\n\tconst loginWithEmailPassword = useStoreActions(_ => _.auth.loginWithEmailPassword)\r\n\r\n\tasync function handleSubmit(values: LoginFormType) {\r\n\t\ttry {\r\n\t\t\tawait loginWithEmailPassword(values)\r\n\t\t\tredirect(routes => routes.dashboard)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error)\r\n\t\t}\r\n\t}\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tloginWithGoogle()\r\n\t}\r\n\r\n\treturn <LoginView {...{ handleGoogleSubmit, handleSubmit }} />\r\n}","import React from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { registerValidationSchema, RegisterFormType } from './RegisterController';\r\nimport { yupResolver } from '@hookform/resolvers';\r\n\r\nexport type RegisterViewProps = {\r\n\thandleSubmit(values: RegisterFormType): Promise<void>;\r\n}\r\n\r\nexport const RegisterView: React.FC<RegisterViewProps> = (props) => {\r\n\r\n\tconst { register, handleSubmit, errors, formState } = useForm<RegisterFormType>({\r\n\t\tresolver: yupResolver(registerValidationSchema),\r\n\r\n\t})\r\n\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\tconst passwordError = formState.touched.password && errors.password?.message\r\n\tconst repeatPasswordError = formState.touched.repeatPassword && errors.repeatPassword?.message\r\n\r\n\treturn <form onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t<input id=\"register-email\" name=\"email\" type=\"text\" ref={register} />\r\n\t\t<p style={{ color: \"#FF6622\" }}>{emailError}</p>\r\n\r\n\t\t<input id=\"register-password\" name=\"password\" type=\"password\" ref={register} />\r\n\t\t<p style={{ color: \"#FF6622\" }}>{passwordError}</p>\r\n\r\n\t\t<input id=\"register-repeat-password\" name=\"repeatPassword\" type=\"password\" ref={register} />\r\n\t\t<p style={{ color: \"#FF6622\" }}>{repeatPasswordError}</p>\r\n\r\n\t\t<button type=\"submit\">{\"Register\"}</button>\r\n\r\n\t</form >\r\n}","import React from 'react';\r\nimport { RegisterView } from './RegisterView';\r\nimport { InferType, object, string, ref } from \"yup\"\r\nimport { useStoreActions } from '../../store';\r\n\r\nexport const registerValidationSchema = object({\r\n\temail: string().defined().max(255).email(),\r\n\tpassword: string().defined().min(5).max(255),\r\n\trepeatPassword: string().defined().oneOf([ref(\"password\")], \"passwords must match\")\r\n}).defined()\r\n\r\nexport type RegisterFormType = InferType<typeof registerValidationSchema>\r\n\r\nexport const RegisterController: React.FC<{}> = () => {\r\n\r\n\tconst register = useStoreActions(_ => _.auth.registerWithEmailPassword)\r\n\r\n\tasync function handleSubmit(values: RegisterFormType) {\r\n\t\tawait register({ email: values.email, password: values.password })\r\n\t}\r\n\r\n\treturn <RegisterView handleSubmit={handleSubmit} />\r\n}","import { useEffect, useState, useCallback, useMemo } from \"react\";\r\n\r\nexport function useMedia(query: string) {\r\n  /**\r\n   * Media query list from query\r\n   */\r\n  const mediaQueryList = useMemo(() => {\r\n    return window.matchMedia(query);\r\n  }, [query]);\r\n\r\n  /**\r\n   * Current value\r\n   */\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  /**\r\n   * Changehandler: sets the current value\r\n   */\r\n  const changeHandler = useCallback(() => {\r\n    setValue(mediaQueryList.matches);\r\n  }, [mediaQueryList]);\r\n\r\n  /**\r\n   * Listening to changes and cleanup\r\n   */\r\n  useEffect(() => {\r\n    changeHandler();\r\n    mediaQueryList.addEventListener(\"change\", changeHandler);\r\n    return () => {\r\n      mediaQueryList.removeEventListener(\"change\", changeHandler);\r\n    };\r\n  }, [mediaQueryList, changeHandler]);\r\n\r\n  /**\r\n   * Returning value\r\n   */\r\n  return value;\r\n}\r\n\r\n/**\r\n * (min-width: $px) media query hook wrapper\r\n */\r\nexport function useMinWidthMedia(minWidth: number) {\r\n  const query = `(min-width: ${minWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * (max-width: $px) media query hook wrapper\r\n */\r\nexport function useMaxWidthMedia(maxWidth: number) {\r\n  const query = `(max-width: ${maxWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n","import \"./AppTabs.scss\"\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { useRouteMatch } from \"react-router-dom\"\r\nimport { routes } from \"../../Routes\"\r\nimport { useRedirect } from \"../../hooks/useRedirect\"\r\nimport {\r\n\tHome as DashboardIcon,\r\n\tBarChart2 as AnalyticsIcon,\r\n\tSettings as SettingsIcon,\r\n\tBriefcase as BudgetIcon,\r\n\tPlus as PlusIcon\r\n} from \"react-feather\"\r\nimport { useMinWidthMedia } from \"../../hooks/useMedia\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport default function AppTabs() {\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst openTransactionsForm = useStoreActions(_ => _.transactionForm.open)\r\n\r\n\tconst sidebarView = useMinWidthMedia(600)\r\n\r\n\tconst dashboardMatch = useRouteMatch(routes.dashboard)\r\n\tconst analyticsMatch = useRouteMatch(routes.analytics)\r\n\tconst budgetMatch = useRouteMatch(routes.budget)\r\n\tconst settingsMatch = useRouteMatch(routes.settings)\r\n\r\n\treturn <div className=\"AppTabs\">\r\n\r\n\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.dashboard)}\r\n\t\t\t\tclassName={cx(\"tab\", { active: !!dashboardMatch })}\r\n\t\t\t>\r\n\t\t\t\t<DashboardIcon />\r\n\t\t\t\t<span>{\"Dashboard\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.analytics)}\r\n\t\t\t\tclassName={cx(\"tab\", { active: !!analyticsMatch })}\r\n\t\t\t>\r\n\t\t\t\t<AnalyticsIcon />\r\n\t\t\t\t<span>{\"Analytics\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t\t{\r\n\t\t\t\tsidebarView ?\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => openTransactionsForm()}\r\n\t\t\t\t\t\tclassName={cx(\"tab\", \"addTab\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PlusIcon />\r\n\t\t\t\t\t\t<span>{\"New transaction\"}</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t: <div className=\"plusButtonContainer\">\r\n\r\n\t\t\t\t\t\t<svg version=\"1.1\" x=\"0px\" y=\"0px\" width=\"108px\" height=\"60px\" viewBox=\"0 0 108 60\" >\r\n\t\t\t\t\t\t\t<path d={svgPath} />\r\n\t\t\t\t\t\t</svg>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => openTransactionsForm()}\r\n\t\t\t\t\t\t\tclassName=\"plusButton\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PlusIcon />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.budget)}\r\n\t\t\t\tclassName={cx(\"tab\", { active: !!budgetMatch })}\r\n\t\t\t>\r\n\t\t\t\t<BudgetIcon />\r\n\t\t\t\t<span>{\"Budget\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.settings)}\r\n\t\t\t\tclassName={cx(\"tab\", { active: !!settingsMatch })}\r\n\t\t\t>\r\n\t\t\t\t<SettingsIcon />\r\n\t\t\t\t<span>{\"Settings\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t</div>\r\n\t</div >\r\n\r\n}\r\n\r\n\r\nconst svgPath = `M80.2,23.4C72.9,30.7,64.4,35,54,35s-18.9-4.3-26.2-11.6C20.5,16.1,10,0,0,0v60h54h54V0C98, 0, 87.5, 16.1, 80.2, 23.4z`","import \"./TransactionFormModal.scss\"\r\nimport React from \"react\"\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { TransactionForm, transactionFormSchema } from \"./TransactionFormModalController\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Modal } from \"@material-ui/core\";\r\n\r\nexport type TransactionFormModalViewProps = {\r\n\topen: boolean;\r\n\thandleClose: Function;\r\n\thandleSubmit(values: TransactionForm): void;\r\n}\r\n\r\nexport function TransactionFormModalView(props: TransactionFormModalViewProps) {\r\n\r\n\tconst { register, handleSubmit, errors, formState } = useForm<TransactionForm>({\r\n\t\tresolver: yupResolver(transactionFormSchema),\r\n\t})\r\n\r\n\tconst integerAmountError = formState.touched.integerAmount && errors.integerAmount?.message\r\n\tconst categoryError = formState.touched.category && errors.category?.message\r\n\tconst commentError = formState.touched.comment && errors.comment?.message\r\n\r\n\treturn <Modal open={props.open} onClose={() => props.handleClose()}>\r\n\t\t<div className=\"TransactionFormModal\">\r\n\t\t\t<form onSubmit={handleSubmit(props.handleSubmit)}>\r\n\t\t\t\t<p>Integer amount</p>\r\n\t\t\t\t<input type=\"number\" id=\"integerAmount\" name=\"integerAmount\" ref={register} />\r\n\t\t\t\t<p style={{ color: \"#FF6622\" }}>{integerAmountError}</p>\r\n\t\t\t\t<p>Category</p>\r\n\t\t\t\t<input type=\"text\" id=\"category\" name=\"category\" ref={register} />\r\n\t\t\t\t<p style={{ color: \"#FF6622\" }}>{categoryError}</p>\r\n\t\t\t\t<p>Comment</p>\r\n\t\t\t\t<input type=\"text\" id=\"comment\" name=\"comment\" ref={register} />\r\n\t\t\t\t<p style={{ color: \"#FF6622\" }}>{commentError}</p>\r\n\t\t\t\t<button type=\"submit\">submit</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</Modal>\r\n}","import React, { useCallback } from \"react\"\r\nimport { TransactionFormModalView } from \"./TransactionFormModalView\"\r\nimport { ObjectSchema, object, string, number } from \"yup\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\nimport { useOnKeyPress } from \"../../hooks/useOnKeyPress\"\r\n\r\nexport type TransactionForm = {\r\n\tcomment?: string;\r\n\tcategory: string;\r\n\tintegerAmount: number;\r\n}\r\n\r\nexport const transactionFormSchema: ObjectSchema<TransactionForm> = object({\r\n\tcomment: string(),\r\n\tcategory: string().required(),\r\n\tintegerAmount: number().required().integer()\r\n}).required()\r\n\r\nexport type TransactionFormProps = {\r\n\r\n}\r\n\r\n\r\nexport function TransactionFormModal(props: TransactionFormProps) {\r\n\r\n\tconst open = useStoreState(_ => _.transactionForm.isOpen)\r\n\tconst openForm = useStoreActions(_ => _.transactionForm.open)\r\n\tconst closeForm = useStoreActions(_ => _.transactionForm.close)\r\n\r\n\tconst postTransaction = useStoreActions(_ => _.transactions.postTransaction)\r\n\r\n\tfunction handleClose() {\r\n\t\tcloseForm()\r\n\t}\r\n\r\n\tfunction handleSubmit(values: TransactionForm) {\r\n\t\tpostTransaction({ ...values, time: Date.now() })\r\n\t}\r\n\r\n\tconst handleKeyPressOpen = useCallback(() => {\r\n\t\topenForm()\r\n\t}, [openForm])\r\n\r\n\t// CTRL space opens menu\r\n\tuseOnKeyPress({ key: 32, shift: false, ctrl: true, alt: false }, handleKeyPressOpen)\r\n\r\n\treturn <TransactionFormModalView\r\n\t\topen={open}\r\n\t\thandleClose={handleClose}\r\n\t\thandleSubmit={handleSubmit}\r\n\t/>\r\n}","import { useCallback, useEffect } from \"react\";\r\n\r\nexport function useOnKeyPress(\r\n  key:\r\n    | string\r\n    | number\r\n    | {\r\n        key: string | number;\r\n        shift?: boolean;\r\n        alt?: boolean;\r\n        ctrl?: boolean;\r\n      },\r\n  callback: Function,\r\n  options?: {\r\n    onKeyUp?: boolean;\r\n    if?: boolean;\r\n    ifNot?: boolean;\r\n  }\r\n) {\r\n  const eventHandler = useCallback(\r\n    (ev: KeyboardEvent) => {\r\n      const matchTarget = typeof key === \"object\" ? key.key : key;\r\n\r\n      const keyMatch = ev.key === matchTarget || ev.keyCode === matchTarget;\r\n\r\n      if (!keyMatch) return;\r\n\r\n      const shiftMatch =\r\n        typeof key !== \"object\" ||\r\n        key.shift === undefined ||\r\n        key.shift === ev.shiftKey;\r\n\r\n      if (!shiftMatch) return;\r\n\r\n      const altMatch =\r\n        typeof key !== \"object\" ||\r\n        key.alt === undefined ||\r\n        key.alt === ev.altKey;\r\n\r\n      if (!altMatch) return;\r\n\r\n      const ctrlMatch =\r\n        typeof key !== \"object\" ||\r\n        key.ctrl === undefined ||\r\n        key.ctrl === ev.ctrlKey;\r\n\r\n      if (!ctrlMatch) return;\r\n\r\n      callback();\r\n    },\r\n    [key, callback]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const ifPassed = options?.if === true || options?.if === undefined;\r\n    const ifNotPassed = options?.ifNot === true || options?.ifNot === undefined;\r\n\r\n    if (ifPassed && ifNotPassed) {\r\n      const onKeyUp = Boolean(options?.onKeyUp);\r\n\r\n      if (onKeyUp) {\r\n        window.addEventListener(\"keyup\", eventHandler);\r\n        return () => window.removeEventListener(\"keyup\", eventHandler);\r\n      } else {\r\n        window.addEventListener(\"keydown\", eventHandler);\r\n        return () => window.removeEventListener(\"keydown\", eventHandler);\r\n      }\r\n    }\r\n  }, [options, eventHandler]);\r\n}\r\n","import \"./AppLayout.scss\"\r\nimport React from \"react\"\r\nimport AppTabs from \"../AppTabs/AppTabs\"\r\nimport { TransactionFormModal } from \"../TransactionFormModal/TransactionFormModalController\"\r\n\r\ntype AppLayoutProps = {\r\n\tchildren?: React.ReactNode\r\n}\r\n\r\nexport default function AppLayout(props: AppLayoutProps) {\r\n\treturn <>\r\n\r\n\t\t<TransactionFormModal />\r\n\r\n\t\t<div className=\"AppLayout\">\r\n\t\t\t<div className=\"appTabsContainer\">\r\n\t\t\t\t< AppTabs />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"childrenContainer\">\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>\r\n}\r\n","import React from \"react\";\r\nimport { Route, RouteProps, Redirect } from \"react-router-dom\";\r\nimport { useStoreState } from \"../../store\";\r\nimport { routes } from \"../../Routes\";\r\n\r\nexport type ProtectedRouteProps = {\r\n\tfallbackRoute?: string;\r\n} & RouteProps\r\n\r\nexport default function ProtectedRoute(props: ProtectedRouteProps) {\r\n\r\n\tconst { fallbackRoute, ...routeProps } = props\r\n\r\n\t/**\r\n\t * Default fallback to login on redirect\r\n\t */\r\n\tconst defaultFallbackRoute = routes.login\r\n\r\n\t/**\r\n\t * Get current user details\r\n\t */\r\n\tconst initialized = useStoreState(_ => _.auth.initialized)\r\n\tconst isLoggedIn = useStoreState(_ => _.auth.isLoggedIn)\r\n\r\n\t/**\r\n\t * If the user is being loaded, show nothing\r\n\t */\r\n\tif (!initialized) return null\r\n\r\n\t/**\r\n\t * Else if user is not logged in redirect to fallback route or default fallback route\r\n\t * if none specified in props\r\n\t */\r\n\telse if (!isLoggedIn) return <Redirect to={fallbackRoute || defaultFallbackRoute} />\r\n\r\n\t/**\r\n\t * Else return route as is\r\n\t */\r\n\telse return <Route {...routeProps} />\r\n}","import \"./TransactionListing.scss\";\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Transaction } from \"../../models/transactions/transactions.class\";\r\nimport { Plus as PlusIcon, Minus as MinusIcon } from \"react-feather\"\r\n\r\nexport type TransactionListingViewProps = {\r\n\ttransaction: Transaction;\r\n\thandleDelete: Function;\r\n}\r\n\r\nexport function TransactionListingView(props: TransactionListingViewProps) {\r\n\r\n\tconst signClass = props.transaction.amount.isPositive ? \"positive\" : \"negative\"\r\n\r\n\treturn <div className=\"TransactionListing\">\r\n\t\t<div className={cx(\"icon\", signClass)}>\r\n\t\t\t<div className=\"iconContainer\">\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.transaction.amount.isPositive\r\n\t\t\t\t\t\t? <PlusIcon />\r\n\t\t\t\t\t\t: <MinusIcon />\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"category\">\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.category}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div className=\"comment\">\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.comment}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div className={cx(\"amount\", signClass)}>\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.amount.formatFull}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t</div>\r\n}","import React, { useCallback } from \"react\"\r\nimport { TransactionListingView } from \"./TransactionListingView\"\r\nimport { Transaction } from \"../../models/transactions/transactions.class\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport type TransactionListingProps = {\r\n\ttransaction: Transaction;\r\n}\r\n\r\nexport function TransactionListing(props: TransactionListingProps) {\r\n\r\n\tconst deleteTransaction = useStoreActions(_ => _.transactions.deleteTransaction)\r\n\r\n\tconst handleDelete = useCallback(() => {\r\n\t\tdeleteTransaction(props.transaction.id)\r\n\t}, [props.transaction, deleteTransaction])\r\n\r\n\treturn <TransactionListingView\r\n\t\ttransaction={props.transaction}\r\n\t\thandleDelete={handleDelete}\r\n\t/>\r\n}","import \"./TransactionList.scss\";\r\nimport React from \"react\"\r\nimport { TransactionListing } from \"../TransactionListing/TransactionListing\";\r\nimport { Transaction } from \"../../models/transactions/transactions.class\";\r\nimport { format } from \"date-fns\"\r\nimport { useStoreActions } from \"../../store\";\r\n\r\nexport type TransactionListViewProps = {\r\n\titemsByDates: {\r\n\t\tdate: Date;\r\n\t\titems: Transaction[];\r\n\t}[]\r\n}\r\n\r\nexport function TransactionListView(props: TransactionListViewProps) {\r\n\r\n\tfunction toDatestring(date: Date) {\r\n\t\treturn date.getFullYear() === currentYear\r\n\t\t\t? format(date, \"dd.MM.\")\r\n\t\t\t: format(date, \"dd.MM.yyyy\")\r\n\t}\r\n\r\n\tconst del = useStoreActions(_ => _.transactions.deleteTransaction)\r\n\r\n\treturn <div className=\"TransactionList\">\r\n\r\n\t\t<ul >\r\n\r\n\t\t\t{\r\n\t\t\t\tprops.itemsByDates.map(entry => {\r\n\r\n\t\t\t\t\tconst datestring = toDatestring(entry.date)\r\n\r\n\t\t\t\t\treturn <li key={datestring}>\r\n\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{datestring}\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<ul >\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tentry.items.map(item => {\r\n\r\n\t\t\t\t\t\t\t\t\treturn <li key={item.id}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tdel(item.id).catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Error deleting:\", error)\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<TransactionListing transaction={item} />\r\n\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t</ul>\r\n\r\n\t</div >\r\n}\r\n\r\nconst currentYear = new Date().getFullYear()","import React from \"react\"\r\nimport { TransactionListView } from \"./TransactionListView\"\r\nimport { useStoreState } from \"../../store\"\r\n\r\nexport type TransactionListProps = {\r\n\tbypassFilters?: boolean;\r\n}\r\n\r\nexport function TransactionList(props: TransactionListProps) {\r\n\r\n\tconst itemsByDates = useStoreState(_ => _.transactions.itemsByDates)\r\n\r\n\tconst filteredItemsByDates = useStoreState(_ => _.transactions.filtered.itemsByDates)\r\n\r\n\treturn <TransactionListView\r\n\t\titemsByDates={props.bypassFilters ? itemsByDates : filteredItemsByDates}\r\n\t/>\r\n}","import \"./TransactionListFilters.scss\";\r\nimport React from \"react\"\r\nimport { Button, ButtonGroup } from \"@material-ui/core\"\r\nimport {\r\n\tSort as FilterIcon,\r\n\tChevronLeft as ChevronLeftIcon,\r\n\tChevronRight as ChevronRightIcon\r\n} from \"@material-ui/icons\"\r\n\r\nexport type TransactionListFiltersViewProps = {\r\n\tonPreviousMonth(): void;\r\n\tonNextMonth(): void;\r\n}\r\n\r\nexport function TransactionListFiltersView(props: TransactionListFiltersViewProps) {\r\n\treturn <div className=\"TransactionListFilters\">\r\n\r\n\t\t<div className=\"left\">\r\n\r\n\t\t\t<ButtonGroup size=\"small\">\r\n\t\t\t\t<Button size=\"small\" variant=\"outlined\" onClick={props.onPreviousMonth}>\r\n\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button size=\"small\" variant=\"outlined\" onClick={props.onNextMonth}>\r\n\t\t\t\t\t<ChevronRightIcon />\r\n\t\t\t\t</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t</div>\r\n\r\n\t\t<div className=\"right\">\r\n\t\t\t<Button variant=\"outlined\">\r\n\t\t\t\t<span>{\"Filter\"}</span>\r\n\t\t\t\t<FilterIcon />\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { TransactionListFiltersView } from \"./TransactionListFiltersView\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport type TransactionListFiltersProps = {\r\n\r\n}\r\n\r\nexport function TransactionListFilters(props: TransactionListFiltersProps) {\r\n\r\n\tconst setNextMonthAsDateInterval = useStoreActions(_ => _.interval.setNextMonthAsDateInterval)\r\n\tconst setPreviousMonthAsDateInterval = useStoreActions(_ => _.interval.setPreviousMonthAsDateInterval)\r\n\r\n\tfunction handleNextMonth() {\r\n\t\tsetNextMonthAsDateInterval()\r\n\t}\r\n\r\n\tfunction handlePreviousMonth() {\r\n\t\tsetPreviousMonthAsDateInterval()\r\n\t}\r\n\r\n\treturn <TransactionListFiltersView\r\n\t\tonNextMonth={handleNextMonth}\r\n\t\tonPreviousMonth={handlePreviousMonth}\r\n\t/>\r\n}","import \"./DashboardTab.scss\"\r\nimport React from \"react\";\r\nimport { TransactionList } from \"../../components/TransactionList/TransactionList\";\r\nimport { Auth } from \"../../models/authentication/auth.class\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\nimport { ChevronUp as ChevronUpIcon, ChevronDown as ChevronDownIcon } from \"react-feather\"\r\nimport { TransactionListFilters } from \"../../components/TransactionListFilters/TransactionListFiltersController\";\r\n\r\nimport textureImg from \"../../images/pexels-johannes-plenio-1103970.jpg\"\r\n\r\nconst styles: Record<string, string> = {}\r\n\r\nexport type DashboardTabViewProps = {\r\n\tuser: Auth;\r\n\tdateIntervalMonthString: string | undefined;\r\n\tdateIntervalIsMonth: boolean;\r\n\tfilteredSum: MoneyAmount;\r\n\tfilteredIncomesSum: MoneyAmount;\r\n\tfilteredExpensesSum: MoneyAmount;\r\n\r\n\tsetNextMonthAsDateInterval(): void;\r\n\tsetPreviousMonthAsDateInterval(): void;\r\n}\r\n\r\nexport function DashboardTabView(props: DashboardTabViewProps) {\r\n\r\n\treturn <div className=\"DashboardTab\">\r\n\r\n\t\t<header>\r\n\r\n\t\t\t<img src={textureImg} alt=\"\" />\r\n\r\n\t\t\t<h1>\r\n\t\t\t\t{props.dateIntervalMonthString}\r\n\t\t\t</h1>\r\n\r\n\t\t\t<div className=\"totals\">\r\n\r\n\t\t\t\t<h2 className={styles.totalHeader}>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{props.filteredSum.formatSign + \" \"}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className={styles.larger}>\r\n\t\t\t\t\t\t{props.filteredSum.formatEuros}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{\".\" + props.filteredSum.formatCents + \" €\"}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</h2>\r\n\r\n\t\t\t\t<div className=\"subtotals\">\r\n\t\t\t\t\t<div className=\"subtotal\">\r\n\t\t\t\t\t\t<ChevronUpIcon />\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{props.filteredIncomesSum.formatFull}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"subtotal\">\r\n\t\t\t\t\t\t<ChevronDownIcon />\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{props.filteredExpensesSum.formatFull}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</header>\r\n\r\n\t\t<main>\r\n\r\n\t\t\t<div className=\"filters\">\r\n\r\n\t\t\t\t<TransactionListFilters />\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"list\">\r\n\r\n\t\t\t\t<TransactionList />\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</main>\r\n\r\n\t</div>\r\n\r\n}","import React from \"react\"\r\nimport { DashboardTabView } from \"./DashboardTabView\"\r\nimport { useStoreState, useStoreActions } from \"../../store\";\r\n\r\nexport function DashboardTab() {\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\tconst dateIntervalIsMonth = useStoreState(_ => _.interval.dateIntervalIsMonth)\r\n\tconst dateIntervalMonthString = useStoreState(_ => _.interval.dateIntervalMonthString)\r\n\r\n\tconst filteredSums = useStoreState(_ => _.transactions.filtered.sums)\r\n\r\n\tconst setNextMonthAsDateInterval = useStoreActions(_ => _.interval.setNextMonthAsDateInterval)\r\n\tconst setPreviousMonthAsDateInterval = useStoreActions(_ => _.interval.setPreviousMonthAsDateInterval)\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <DashboardTabView\r\n\r\n\t\tdateIntervalIsMonth={dateIntervalIsMonth}\r\n\t\tdateIntervalMonthString={dateIntervalMonthString}\r\n\r\n\t\tsetNextMonthAsDateInterval={() => setNextMonthAsDateInterval()}\r\n\t\tsetPreviousMonthAsDateInterval={() => setPreviousMonthAsDateInterval()}\r\n\r\n\t\tfilteredSum={filteredSums.all}\r\n\t\tfilteredIncomesSum={filteredSums.incomes}\r\n\t\tfilteredExpensesSum={filteredSums.expenses}\r\n\r\n\t\tuser={user}\r\n\r\n\t/>\r\n}","import \"./SettingsTab.scss\";\r\nimport React from \"react\"\r\nimport { Auth } from \"../../models/authentication/auth.class\";\r\n\r\nexport type SettingsTabViewProps = {\r\n\tuser: Auth;\r\n\thandleLogout(): void;\r\n}\r\n\r\nexport function SettingsTabView(props: SettingsTabViewProps) {\r\n\r\n\treturn <div className=\"SettingsTab\">\r\n\r\n\t\t{\r\n\t\t\tprops.user.photoUrl ? <img style={{ width: 64, height: 64 }} alt=\"profile\" src={props.user.photoUrl} /> : null\r\n\t\t}\r\n\r\n\t\t<table>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Display name</td>\r\n\t\t\t\t\t<td>{props.user.displayName}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Email</td>\r\n\t\t\t\t\t<td>{props.user.email}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>ID</td>\r\n\t\t\t\t\t<td>{props.user.id}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Google ID</td>\r\n\t\t\t\t\t<td>{props.user.googleId}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\r\n\t\t<button onClick={props.handleLogout}>Log out</button>\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { SettingsTabView } from \"./SettingsTabView\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\n\r\nexport type SettingsTabProps = {\r\n\r\n}\r\n\r\nexport function SettingsTab(props: SettingsTabProps) {\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\tconst logout = useStoreActions(_ => _.auth.logout)\r\n\r\n\tfunction handleLogout() {\r\n\t\tlogout()\r\n\t}\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <SettingsTabView\r\n\t\tuser={user}\r\n\t\thandleLogout={handleLogout}\r\n\t/>\r\n}","import \"./AnalyticsTab.scss\";\r\nimport React, { useState } from \"react\"\r\nimport { Transaction } from \"../../models/transactions/transactions.class\";\r\nimport { useStoreActions } from \"../../store\";\r\n\r\nexport type AnalyticsTabViewProps = {\r\n\r\n}\r\n\r\nexport function AnalyticsTabView(props: AnalyticsTabViewProps) {\r\n\r\n\tconst [data, setData] = useState<Transaction[]>([])\r\n\r\n\tconst postTransaction = useStoreActions(_ => _.transactions.postTransaction)\r\n\r\n\tfunction handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n\r\n\t\tconsole.log(\"Handling change\")\r\n\r\n\t\tif (!e.target.files) throw new Error(\"No files array\")\r\n\r\n\t\tconst file = e.target.files[0]\r\n\r\n\t\tif (!file) throw new Error(\"No file\")\r\n\r\n\t\tconst reader = new FileReader();\r\n\r\n\t\treader.addEventListener('load', function (e) {\r\n\r\n\t\t\tif (!e.target) throw new Error(\"No load event target\")\r\n\r\n\t\t\tif (!e.target.result) throw new Error(\"Load event target result is null\")\r\n\r\n\t\t\tconst csvData = e.target.result.toString()\r\n\r\n\t\t\tconst result: Transaction[] = []\r\n\r\n\t\t\tconst rows = csvData.split(\"\\n\")\r\n\r\n\t\t\tfor (const row of rows) {\r\n\r\n\t\t\t\tif (row) {\r\n\r\n\t\t\t\t\tconst values = row.split(\";\")\r\n\r\n\t\t\t\t\tpostTransaction({\r\n\t\t\t\t\t\tcategory: values[1],\r\n\t\t\t\t\t\tcomment: values[3],\r\n\t\t\t\t\t\tintegerAmount: Number(values[2].replace(/[^\\d-]/g, '')),\r\n\t\t\t\t\t\ttime: new Date(values[0].split(\".\").reverse().map(_ => _.padStart(2, \"0\")).join(\"-\")).getTime(),\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsetData(result)\r\n\r\n\t\t})\r\n\r\n\t\treader.readAsText(file)\r\n\r\n\t}\r\n\r\n\treturn <div className=\"AnalyticsTab\">\r\n\r\n\t\t<input type=\"file\" accept=\".csv\" onChange={handleChange} />\r\n\r\n\t\t<ul>\r\n\t\t\t{\r\n\t\t\t\tdata.map(t => {\r\n\t\t\t\t\treturn <li key={t.id}>\r\n\r\n\t\t\t\t\t\t{t.date.toDateString()}: {t.amount.formatFull} {t.category} - {t.comment}\r\n\r\n\t\t\t\t\t</li>\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</ul>\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { AnalyticsTabView } from \"./AnalyticsTabView\"\r\n\r\nexport type AnalyticsTabProps = {\r\n\r\n}\r\n\r\nexport function AnalyticsTab(props: AnalyticsTabProps) {\r\n\treturn <AnalyticsTabView />\r\n}","import React from \"react\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { LoginController } from './views/Login/LoginController';\r\nimport { RegisterController } from './views/Register/RegisterController';\r\nimport AppLayout from './components/AppLayout/AppLayout';\r\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute';\r\nimport { DashboardTab } from './views/DashboardTab/DashboardTabController';\r\nimport { SettingsTab } from \"./views/SettingsTab/SettingsTabController\";\r\nimport { AnalyticsTab } from \"./views/AnalyticsTab/AnalyticsTabController\";\r\n\r\nexport const routes = {\r\n\tapproot: \"/app\",\r\n\tdashboard: \"/app/dashboard\",\r\n\tanalytics: \"/app/analytics\",\r\n\tbudget: \"/app/budget\",\r\n\tsettings: \"/app/settings\",\r\n\tlogin: \"/\",\r\n\tregister: \"/register\",\r\n} as const;\r\n\r\nexport function Routes() {\r\n\r\n\treturn <Switch>\r\n\r\n\t\t<Route exact path={routes.login}>\r\n\t\t\t<LoginController />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.register}>\r\n\t\t\t<RegisterController />\r\n\t\t</Route>\r\n\r\n\t\t<ProtectedRoute exact path={routes.dashboard}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<DashboardTab />\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.analytics}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<AnalyticsTab />\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.budget}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<p>Budget placeholder</p>\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.settings}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<SettingsTab />\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<Route exact path=\"/v\">\r\n\t\t\tVersion number 0.0.1\r\n\t\t</Route>\r\n\r\n\t\t<Route path=\"/\">\r\n\t\t\t<Redirect to={routes.dashboard} />\r\n\t\t</Route>\r\n\t</Switch>\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport { Routes } from './Routes';\r\nimport { useStoreActions } from './store';\r\n\r\nfunction App() {\r\n\r\n\t/**\r\n\t * Initialize by fetching the user's profile if any\r\n\t */\r\n\tconst getProfile = useStoreActions(_ => _.auth.getProfile)\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfile()\r\n\t}, [getProfile])\r\n\r\n\treturn <Routes />\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\n// Access any CSS var in :root by name\r\nfunction cssvar(\r\n  name: string,\r\n  options?: {\r\n    color?: boolean;\r\n  }\r\n) {\r\n  let value = getComputedStyle(document.documentElement).getPropertyValue(\r\n    \"--\" + name\r\n  );\r\n  if (options) {\r\n    if (options.color) {\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        value = value.substring(1);\r\n      }\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: cssvar(\"color-primary-main\", { color: true }),\r\n      dark: cssvar(\"color-primary-dark\", { color: true }),\r\n      light: cssvar(\"color-primary-light\", { color: true }),\r\n      50: cssvar(\"color-primary-50\", { color: true }),\r\n      100: cssvar(\"color-primary-100\", { color: true }),\r\n      200: cssvar(\"color-primary-200\", { color: true }),\r\n      300: cssvar(\"color-primary-300\", { color: true }),\r\n      400: cssvar(\"color-primary-400\", { color: true }),\r\n      500: cssvar(\"color-primary-500\", { color: true }),\r\n      600: cssvar(\"color-primary-600\", { color: true }),\r\n      700: cssvar(\"color-primary-900\", { color: true }),\r\n      800: cssvar(\"color-primary-700\", { color: true }),\r\n      900: cssvar(\"color-primary-700\", { color: true }),\r\n    },\r\n  },\r\n});\r\n","import \"./styles/index.scss\"\r\nimport \"./styles/main.scss\"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store';\r\nimport { StoreProvider } from 'easy-peasy';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { theme } from \"./styles/theme\";\r\n\r\nReactDOM.render(\r\n\t<StoreProvider store={store}>\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<React.StrictMode>\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t</React.StrictMode>\r\n\t\t</ThemeProvider>\r\n\t</StoreProvider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}